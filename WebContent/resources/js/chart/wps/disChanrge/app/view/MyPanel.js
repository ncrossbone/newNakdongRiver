/*
 * File: app/view/MyPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyPanel', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column'
    ],

    height: 353,
    width: 563,
    title: 'My Panel',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'excel',
                            text: '엑셀',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    height: 299,
                    id: 'myGrid',
                    autoScroll: true,
                    title: '',
                    forceFit: false,
                    store: 'MyJsonStore',
                    viewConfig: {
                        deferEmptyText: false,
                        emptyText: '<div style="text-align:center;width:100%">데이터가 없습니다.</div>'
                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'BIZ_NAME',
                            text: 'MyColumn'
                        },
                        {
                            xtype: 'gridcolumn',
                            text: 'MyColumn1'
                        },
                        {
                            xtype: 'gridcolumn',
                            text: 'MyColumn2'
                        },
                        {
                            xtype: 'gridcolumn',
                            text: 'MyColumn3'
                        },
                        {
                            xtype: 'gridcolumn',
                            text: 'MyColumn4'
                        },
                        {
                            xtype: 'gridcolumn',
                            text: 'MyColumn5'
                        },
                        {
                            xtype: 'gridcolumn',
                            text: 'MyColumn6'
                        },
                        {
                            xtype: 'gridcolumn',
                            text: 'MyColumn7'
                        }
                    ],
                    listeners: {
                        beforerender: {
                            fn: me.onMyGridBeforeRender,
                            scope: me
                        }
                    }
                }
            ],
            listeners: {
                beforerender: {
                    fn: me.onPanelBeforeRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        var data = Ext.getCmp("myGrid").getStore().data.items;
        var request = new Request();
        var workType = request.getParameter("search_type_work");
        var html = "<div><table border='1'><thead><tr>";

        if(workType == "air" || workType == "water"){
            html += "<th>업소명</th>";
            html += "<th>소재지</th>";
            html += "<th>전화번호</th>";
            html += "<th>업종</th>";
            html += "<th>종별</th>";
            html += "<th>등급</th>";
            html += "<th>신고허가여부</th>";
        }else if(workType == "animal"){
            html += "<th>업소명</th>";
            html += "<th>소재지</th>";
            html += "<th>전화번호</th>";
            html += "<th>축종</th>";
            html += "<th>사육두수(마리)</th>";
            html += "<th>사육면적(m<sup>2</sup>)</th>";
            html += "<th>처리방법</th>";
            html += "<th>신고허가여부</th>";
        }

        html += "</tr>";
        html += "</thead>";
        html += "<tbody>";

        var columns = new Array();
        //공통
        columns.push("BIZ_NAME");
        columns.push("ADDRESS");
        columns.push("TEL");

        if(workType == "air"){
            columns.push("BIZ_TYPE");
            columns.push("AIR_TYPE");
            columns.push("AIR_LEVEL");
            columns.push("AIR_AUTH");
        }else if(workType == "water"){
            columns.push("BIZ_TYPE");
            columns.push("WATER_TYPE");
            columns.push("WATER_LEVEL");
            columns.push("WATER_AUTH");
        }else if(workType == "animal"){
            columns.push("ANIMAL_TYPE");
            columns.push("ANIMAL_NUMBER");
            columns.push("ANIMAL_AREA");
            columns.push("METHOD");
            columns.push("AUTH");
        }

        for(var i in data) {
            html += "<tr>";

            for(var a = 0; a < columns.length; a++){
                html += "<td>" + data[i].data[columns[a]] + "</td>";
            }

            html += "</tr>";


        }

        html += "</tbody></table></div>";

        $(html).find("td").attr("style", "mso-number-format:'\\@'; text-align: center;");

        if($("form[name='excelForm']").length > 0) {
            $("form[name='excelForm']").remove();
        }

        $("body").append("<form name='excelForm' method='post' target='_blank' accept-charset='EUC-KR'><input type='hidden' id='excel' name='excel'></form>");

        $("#excel").val(
            $("<div>").append(
                $(html).clone()
            ).html()
        );

        document.excelForm.action="/nakdong/exportExcel.do";
        document.excelForm.submit();
    },

    onMyGridBeforeRender: function(component, eOpts) {
        var grid  = Ext.ComponentManager.get("myGrid");
        var store = Ext.data.StoreManager.get("MyJsonStore");
        var proxy = store.getProxy();
        var request = new Request();
        var workType = request.getParameter("search_type_work");

        var animalColumns = [
            {
                xtype: 'gridcolumn',
                dataIndex: 'BIZ_NAME',
                text: '업소명'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'ADDRESS',
                text: '소재지'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'TEL',
                text: '전화번호'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'ANIMAL_TYPE',
                text: '축종'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'ANIMAL_NUMBER',
                text: '사육두수(마리)'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'ANIMAL_AREA',
                text: '사육면적(m<sup>2</sup>)'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'METHOD',
                text: '처리방법'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'AUTH',
                text: '신고허가여부'
            }
        ];

        var airColumns = [
            {
                xtype: 'gridcolumn',
                dataIndex: 'BIZ_NAME',
                text: '업소명'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'ADDRESS',
                text: '소재지'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'TEL',
                text: '전화번호'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'BIZ_TYPE',
                text: '업종'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'AIR_TYPE',
                text: '종별'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'AIR_LEVEL',
                text: '등급'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'AIR_AUTH',
                text: '신고허가여부'
            }
        ];

        var waterColumns = [
            {
                xtype: 'gridcolumn',
                dataIndex: 'BIZ_NAME',
                text: '업소명'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'ADDRESS',
                text: '소재지'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'TEL',
                text: '전화번호'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'BIZ_TYPE',
                text: '업종'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'WATER_TYPE',
                text: '종별'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'WATER_LEVEL',
                text: '등급'
            },
            {
                xtype: 'gridcolumn',
                dataIndex: 'WATER_AUTH',
                text: '신고허가여부'
            }
        ];

        if(workType == "air"){
            var airModel = Ext.ModelManager.getModel('MyApp.model.airModel');
            proxy.setModel(airModel, false);
            grid.reconfigure(store, airColumns);
        }else if(workType == "water"){
            var waterModel = Ext.ModelManager.getModel('MyApp.model.waterModel');
            proxy.setModel(waterModel, false);
            grid.reconfigure(store, waterColumns);
        }else if(workType == "animal"){
            var animalModel = Ext.ModelManager.getModel('MyApp.model.animalModel');
            proxy.setModel(animalModel, false);
            grid.reconfigure(store, animalColumns);
        }



        store.load();
    },

    onPanelBeforeRender: function(component, eOpts) {
        var request = new Request();
        var workType = request.getParameter("search_type_work");

        var panel = Ext.ComponentManager.get("MyPanel");

        if(workType == "air"){
            this.setTitle("배출업소현황-대기");
        }else if(workType == "water"){
            this.setTitle("배출업소현황-수질");
        }else if(workType == "animal"){
            this.setTitle("배출업소현황-축산폐수");
        }

    }

});